version: 2.1

jobs:
  build:
    docker: 
      - image: kimitzu/deploy-env
    working_directory: ~/kimitzu-client
    steps:
      - checkout 
      - restore_cache: 
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - /root/.cache/Cypress
      - run:
          name: build-ci
          command: CI=false npm run build:remote:ci
      - run:
          name: build-kimitzu-go
          command: |
            go get -u github.com/kimitzu/kimitzu-go
            cd $GOPATH/src/github.com/kimitzu/kimitzu-go
            go build openbazaard.go
            xgo -go=1.12 --targets=windows/amd64 .
            cp openbazaard ~/kimitzu-client/lib
      - run:
          name: build-kimitzu-services
          command: |
            go get -u github.com/kimitzu/kimitzu-services
            cd $GOPATH/src/github.com/kimitzu/kimitzu-services
            packr2
            go build services.go
            xgo -go=1.12 --targets=windows/amd64 .
            cp kimitzu-go-windows-4.0-amd64.exe ~/kimitzu-client/lib/openbazaard.exe
            cp services ~/kimitzu-client/lib/services
      - persist_to_workspace:
          root:  ~/
          paths:
            - kimitzu-client/*
            - .cache/Cypress
  test:
    docker: 
      - image: kimitzu/deploy-env
    working_directory: ~/kimitzu-client
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - run:
          name: unit-tests
          command: npm run react-test
      - run:
          name: cypress-tests
          command: npm run ci:cypress:test
      - store_artifacts:
          path: ./cypress/videos
  deploy:
    docker: 
      - image: kimitzu/deploy-env
    working_directory: ~/kimitzu-client
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: snapcraft-login
          command: mkdir .snapcraft && echo $SNAPCRAFT_LOGIN_FILE | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
      - checkout
      - run:
          name: build-and-draft-linux
          command: CI=false npm run build:local:mainnet -- --publish=always --linux
      - run:
          name: build:-and-draft-windows
          command: CI=false npm run build:local:mainnet -- --publish=always --windows
      - store_test_results:
          path: ./dist

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: develop